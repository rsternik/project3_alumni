[{"C:\\Users\\neex1\\School\\Homework\\project3_alumni\\client\\src\\index.js":"1","C:\\Users\\neex1\\School\\Homework\\project3_alumni\\client\\src\\reportWebVitals.js":"2","C:\\Users\\neex1\\School\\Homework\\project3_alumni\\client\\src\\App.js":"3","C:\\Users\\neex1\\School\\Homework\\project3_alumni\\client\\src\\pages\\Home.js":"4","C:\\Users\\neex1\\School\\Homework\\project3_alumni\\client\\src\\pages\\UserPost.js":"5","C:\\Users\\neex1\\School\\Homework\\project3_alumni\\client\\src\\utils\\queries.js":"6","C:\\Users\\neex1\\School\\Homework\\project3_alumni\\client\\src\\components\\CommentForm\\index.js":"7","C:\\Users\\neex1\\School\\Homework\\project3_alumni\\client\\src\\components\\MessageForm\\index.js":"8","C:\\Users\\neex1\\School\\Homework\\project3_alumni\\client\\src\\components\\CommentList\\index.js":"9","C:\\Users\\neex1\\School\\Homework\\project3_alumni\\client\\src\\components\\MessageList\\index.js":"10","C:\\Users\\neex1\\School\\Homework\\project3_alumni\\client\\src\\utils\\mutations.js":"11"},{"size":517,"mtime":1645764457579,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1645764457581,"results":"14","hashOfConfig":"13"},{"size":1025,"mtime":1645907461863,"results":"15","hashOfConfig":"13"},{"size":842,"mtime":1645905859430,"results":"16","hashOfConfig":"13"},{"size":1688,"mtime":1645906099790,"results":"17","hashOfConfig":"13"},{"size":477,"mtime":1645906184880,"results":"18","hashOfConfig":"13"},{"size":1945,"mtime":1645764457576,"results":"19","hashOfConfig":"13"},{"size":2953,"mtime":1645905472216,"results":"20","hashOfConfig":"13"},{"size":1009,"mtime":1645764457576,"results":"21","hashOfConfig":"13"},{"size":1194,"mtime":1645905618105,"results":"22","hashOfConfig":"13"},{"size":700,"mtime":1645904760643,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4ne6hz",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":2,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\neex1\\School\\Homework\\project3_alumni\\client\\src\\index.js",[],"C:\\Users\\neex1\\School\\Homework\\project3_alumni\\client\\src\\reportWebVitals.js",[],"C:\\Users\\neex1\\School\\Homework\\project3_alumni\\client\\src\\App.js",["51","52"],"C:\\Users\\neex1\\School\\Homework\\project3_alumni\\client\\src\\pages\\Home.js",["53","54"],"import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport MessageList from '../components/MessageList';\r\nimport MessageForm from '../components/MessageForm';\r\n\r\nimport { QUERY_MESSAGE } from '../utils/queries';\r\n\r\nconst Home = () => {\r\n  const { loading, data } = useQuery(QUERY_MESSAGE);\r\n  const thoughts = data?.message || [];\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"\">\r\n        <div\r\n          className=\"\\\"\r\n          style={{ border: '' }}\r\n        >\r\n          <MessageForm />\r\n        </div>\r\n        <div className=\"\">\r\n          {loading ? (\r\n            <div>Loading...</div>\r\n          ) : (\r\n            <MessageList\r\n              message={Message}\r\n              title=\"UW post a message\"\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;","C:\\Users\\neex1\\School\\Homework\\project3_alumni\\client\\src\\pages\\UserPost.js",["55"],"import React from 'react';\r\n\r\n// Import the `useParams()` hook from React Router\r\nimport { useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport CommentList from '../components/CommentList';\r\nimport CommentForm from '../components/CommentForm';\r\n\r\nimport { QUERY_SINGLE_THOUGHT, QUERY_USERPOST } from '../utils/queries';\r\n\r\nconst UserPost = () => {\r\n  // Use `useParams()` to retrieve value of the route parameter `:profileId`\r\n  const { messageId } = useParams();\r\n\r\n  const { loading, data } = useQuery(QUERY_USERPOST, {\r\n    // Pass the `thoughtId` URL parameter into query to retrieve this thought's data\r\n    variables: { messageId: messageId },\r\n  });\r\n\r\n  const message = data?.message || {};\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div className=\"my-3\">\r\n      <h3 className=\"card-header bg-dark text-light p-2 m-0\">\r\n        {message.messageAuthor} <br />\r\n        <span style={{ fontSize: '1rem' }}>\r\n          posted this{message.createdAt}\r\n        </span>\r\n      </h3>\r\n      <div className=\"bg-light py-4\">\r\n        <blockquote\r\n          className=\"p-4\"\r\n          style={{\r\n            fontSize: '1.5rem',\r\n            fontStyle: 'italic',\r\n            border: '2px dotted #1a1a1a',\r\n            lineHeight: '1.5',\r\n          }}\r\n        >\r\n          {message.messageText}\r\n        </blockquote>\r\n      </div>\r\n\r\n      <div className=\"my-5\">\r\n        <CommentList comments={message.comments} />\r\n      </div>\r\n      <div className=\"m-3 p-4\" style={{ border: '1px dotted #1a1a1a' }}>\r\n        <CommentForm messageId={message._id} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPost;\r\n","C:\\Users\\neex1\\School\\Homework\\project3_alumni\\client\\src\\utils\\queries.js",[],"C:\\Users\\neex1\\School\\Homework\\project3_alumni\\client\\src\\components\\CommentForm\\index.js",["56"],"import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_COMMENT } from '../../utils/mutations';\r\n\r\nconst CommentForm = ({ thoughtId }) => {\r\n  const [commentText, setCommentText] = useState('');\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n\r\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await addComment({\r\n        variables: { thoughtId, commentText },\r\n      });\r\n\r\n      setCommentText('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === 'commentText' && value.length <= 280) {\r\n      setCommentText(value);\r\n      setCharacterCount(value.length);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4>What are your thoughts on this thought?</h4>\r\n      <p\r\n        className={`m-0 ${\r\n          characterCount === 280 || error ? 'text-danger' : ''\r\n        }`}\r\n      >\r\n        Character Count: {characterCount}/280\r\n        {error && <span className=\"ml-2\">Something went wrong...</span>}\r\n      </p>\r\n      <form\r\n        className=\"flex-row justify-center justify-space-between-md align-center\"\r\n        onSubmit={handleFormSubmit}\r\n      >\r\n        <div className=\"col-12 col-lg-9\">\r\n          <textarea\r\n            name=\"commentText\"\r\n            placeholder=\"Add your comment...\"\r\n            value={commentText}\r\n            className=\"form-input w-100\"\r\n            style={{ lineHeight: '1.5' }}\r\n            onChange={handleChange}\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div className=\"col-12 col-lg-3\">\r\n          <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\r\n            Add Comment\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n","C:\\Users\\neex1\\School\\Homework\\project3_alumni\\client\\src\\components\\MessageForm\\index.js",["57","58","59","60","61"],"import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_MESSAGE } from '../../utils/mutations';\r\nimport { QUERY_MESSAGE } from '../../utils/queries';\r\n\r\nconst ThoughtForm = () => {\r\n  const [formState, setFormState] = useState({\r\n    messageText: '',\r\n    messageAuthor: '',\r\n  });\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n\r\n  const [addMessage, { error }] = useMutation(ADD_MESSAGE, {\r\n    update(cache, { data: { addMessage } }) {\r\n      try {\r\n        const { thoughts } = cache.readQuery({ query: QUERY_MESSAGE });\r\n\r\n        cache.writeQuery({\r\n          query: QUERY_MESSAGE,\r\n          data: { message: [addMessage, ...message] },\r\n        });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await addMessage({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      setFormState({\r\n        messageText: '',\r\n        messageAuthor: '',\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === 'messageText' && value.length <= 280) {\r\n      setFormState({ ...formState, [name]: value });\r\n      setCharacterCount(value.length);\r\n    } else if (name !== 'messageText') {\r\n      setFormState({ ...formState, [name]: value });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>What's new?</h3>\r\n\r\n      <p\r\n        className={`m-0 ${\r\n          characterCount === 280 || error ? 'text-danger' : ''\r\n        }`}\r\n      >\r\n        Character Count: {characterCount}/280\r\n        {error && <span className=\"ml-2\">Something went wrong...</span>}\r\n      </p>\r\n      <form\r\n        className=\"flex-row justify-center justify-space-between-md align-center\"\r\n        onSubmit={handleFormSubmit}\r\n      >\r\n        <div className=\"col-12\">\r\n          <textarea\r\n            name=\"messageText\"\r\n            placeholder=\"Sup?\"\r\n            value={formState.messageText}\r\n            className=\"form-input w-100\"\r\n            style={{ lineHeight: '1.5' }}\r\n            onChange={handleChange}\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"col-12 col-lg-9\">\r\n          <input\r\n            name=\"messageAuthor\"\r\n            placeholder=\"please share your name\"\r\n            value={formState.thoughtAuthor}\r\n            className=\"form-input w-100\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-lg-3\">\r\n          <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\r\n            Add Message\r\n          </button>\r\n        </div>\r\n        {error && (\r\n          <div className=\"col-12 my-3 bg-danger text-white p-3\">\r\n            Something went wrong...\r\n          </div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageForm;\r\n","C:\\Users\\neex1\\School\\Homework\\project3_alumni\\client\\src\\components\\CommentList\\index.js",[],"C:\\Users\\neex1\\School\\Homework\\project3_alumni\\client\\src\\components\\MessageList\\index.js",["62"],"import React from 'react';\r\n// Import `<Link>` component from React Router for internal hyperlinks\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MessageList = ({ message, title }) => {\r\n  if (!message.length) {\r\n    return <h3>No messages posted</h3>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>{title}</h3>\r\n      {message &&\r\n        message.map((message) => (\r\n          <div key={message._id} className=\"card mb-3\">\r\n            <h4 className=\"card-header bg-primary text-light p-2 m-0\">\r\n              {message.messageAuthor} <br />\r\n              <span style={{ fontSize: '1rem' }}>\r\n                posted this {thought.createdAt}\r\n              </span>\r\n            </h4>\r\n            <div className=\"card-body bg-light p-2\">\r\n              <p>{message.messageText}</p>\r\n            </div>\r\n            {/* Create a link to this thought's page to view its comments using `<Link>` component */}\r\n            <Link\r\n              className=\"btn btn-primary btn-block btn-squared\"\r\n              to={`/message/${message._id}`}\r\n            >\r\n              Reply to this message.\r\n            </Link>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageList;\r\n","C:\\Users\\neex1\\School\\Homework\\project3_alumni\\client\\src\\utils\\mutations.js",[],{"ruleId":"63","severity":1,"message":"64","line":2,"column":39,"nodeType":"65","messageId":"66","endLine":2,"endColumn":51},{"ruleId":"67","severity":2,"message":"68","line":17,"column":10,"nodeType":"69","messageId":"70","endLine":17,"endColumn":24},{"ruleId":"63","severity":1,"message":"71","line":11,"column":9,"nodeType":"65","messageId":"66","endLine":11,"endColumn":17},{"ruleId":"72","severity":2,"message":"73","line":27,"column":24,"nodeType":"65","messageId":"74","endLine":27,"endColumn":31},{"ruleId":"63","severity":1,"message":"75","line":10,"column":10,"nodeType":"65","messageId":"66","endLine":10,"endColumn":30},{"ruleId":"63","severity":1,"message":"76","line":16,"column":15,"nodeType":"65","messageId":"66","endLine":16,"endColumn":19},{"ruleId":"63","severity":1,"message":"77","line":7,"column":7,"nodeType":"65","messageId":"66","endLine":7,"endColumn":18},{"ruleId":"63","severity":1,"message":"71","line":17,"column":17,"nodeType":"65","messageId":"66","endLine":17,"endColumn":25},{"ruleId":"72","severity":2,"message":"78","line":21,"column":44,"nodeType":"65","messageId":"74","endLine":21,"endColumn":51},{"ruleId":"63","severity":1,"message":"76","line":33,"column":15,"nodeType":"65","messageId":"66","endLine":33,"endColumn":19},{"ruleId":"72","severity":2,"message":"79","line":108,"column":16,"nodeType":"65","messageId":"74","endLine":108,"endColumn":27},{"ruleId":"72","severity":2,"message":"80","line":19,"column":30,"nodeType":"65","messageId":"74","endLine":19,"endColumn":37},"no-unused-vars","'ApolloPriver' is defined but never used.","Identifier","unusedVar","react/jsx-no-undef","'ApolloProvider' is not defined.","JSXIdentifier","undefined","'thoughts' is assigned a value but never used.","no-undef","'Message' is not defined.","undef","'QUERY_SINGLE_THOUGHT' is defined but never used.","'data' is assigned a value but never used.","'ThoughtForm' is assigned a value but never used.","'message' is not defined.","'MessageForm' is not defined.","'thought' is not defined."]