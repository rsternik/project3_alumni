[{"/home/jefreycolegrove/project3_alumni/client/src/index.js":"1","/home/jefreycolegrove/project3_alumni/client/src/App.js":"2","/home/jefreycolegrove/project3_alumni/client/src/reportWebVitals.js":"3","/home/jefreycolegrove/project3_alumni/client/src/pages/Signup.js":"4","/home/jefreycolegrove/project3_alumni/client/src/pages/Home.js":"5","/home/jefreycolegrove/project3_alumni/client/src/pages/Profile.js":"6","/home/jefreycolegrove/project3_alumni/client/src/pages/Login.js":"7","/home/jefreycolegrove/project3_alumni/client/src/pages/SinglePost.js":"8","/home/jefreycolegrove/project3_alumni/client/src/components/Footer/index.js":"9","/home/jefreycolegrove/project3_alumni/client/src/components/Header/index.js":"10","/home/jefreycolegrove/project3_alumni/client/src/utils/mutations.js":"11","/home/jefreycolegrove/project3_alumni/client/src/utils/auth.js":"12","/home/jefreycolegrove/project3_alumni/client/src/utils/queries.js":"13","/home/jefreycolegrove/project3_alumni/client/src/components/PostList/index.js":"14","/home/jefreycolegrove/project3_alumni/client/src/components/PostForm/index.js":"15","/home/jefreycolegrove/project3_alumni/client/src/components/CommentList/index.js":"16","/home/jefreycolegrove/project3_alumni/client/src/components/CommentForm/index.js":"17"},{"size":500,"mtime":1646365215940,"results":"18","hashOfConfig":"19"},{"size":1875,"mtime":1646365271161,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1646365215940,"results":"21","hashOfConfig":"19"},{"size":2794,"mtime":1646365271165,"results":"22","hashOfConfig":"19"},{"size":913,"mtime":1646365271165,"results":"23","hashOfConfig":"19"},{"size":1726,"mtime":1646365271165,"results":"24","hashOfConfig":"19"},{"size":2570,"mtime":1646365271165,"results":"25","hashOfConfig":"19"},{"size":1438,"mtime":1646365271165,"results":"26","hashOfConfig":"19"},{"size":856,"mtime":1646365271165,"results":"27","hashOfConfig":"19"},{"size":1364,"mtime":1646365271165,"results":"28","hashOfConfig":"19"},{"size":1060,"mtime":1646365271165,"results":"29","hashOfConfig":"19"},{"size":979,"mtime":1646365271165,"results":"30","hashOfConfig":"19"},{"size":876,"mtime":1646365271165,"results":"31","hashOfConfig":"19"},{"size":1482,"mtime":1646365271165,"results":"32","hashOfConfig":"19"},{"size":2868,"mtime":1646365271165,"results":"33","hashOfConfig":"19"},{"size":1003,"mtime":1646365271165,"results":"34","hashOfConfig":"19"},{"size":2457,"mtime":1646365271165,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kld3it",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},"/home/jefreycolegrove/project3_alumni/client/src/index.js",[],"/home/jefreycolegrove/project3_alumni/client/src/App.js",[],"/home/jefreycolegrove/project3_alumni/client/src/reportWebVitals.js",[],"/home/jefreycolegrove/project3_alumni/client/src/pages/Signup.js",[],"/home/jefreycolegrove/project3_alumni/client/src/pages/Home.js",[],"/home/jefreycolegrove/project3_alumni/client/src/pages/Profile.js",[],"/home/jefreycolegrove/project3_alumni/client/src/pages/Login.js",[],"/home/jefreycolegrove/project3_alumni/client/src/pages/SinglePost.js",[],"/home/jefreycolegrove/project3_alumni/client/src/components/Footer/index.js",[],"/home/jefreycolegrove/project3_alumni/client/src/components/Header/index.js",[],"/home/jefreycolegrove/project3_alumni/client/src/utils/mutations.js",[],"/home/jefreycolegrove/project3_alumni/client/src/utils/auth.js",[],"/home/jefreycolegrove/project3_alumni/client/src/utils/queries.js",[],"/home/jefreycolegrove/project3_alumni/client/src/components/PostList/index.js",[],"/home/jefreycolegrove/project3_alumni/client/src/components/PostForm/index.js",["72","73"],"// Imports\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { ADD_POST } from '../../utils/mutations';\nimport { QUERY_POSTS, QUERY_ME } from '../../utils/queries';\nimport Auth from '../../utils/auth';\n\n// Post form const & events\nconst PostForm = () => {\n  const [postText, setPostText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n  const [addPost, { error }] = useMutation(ADD_POST, {\n    update(cache, { data: { addPost } }) {\n      try {\n        const { posts } = cache.readQuery({ query: QUERY_POSTS });\n\n        cache.writeQuery({\n          query: QUERY_POSTS,\n          data: { posts: [addPost, ...posts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n  });\n  // Subit form handler\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await addPost({\n        variables: {\n          postText,\n          postAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setPostText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  // Change Handler\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    if (name === 'postText' && value.length <= 280) {\n      setPostText(value);\n      setCharacterCount(value.length);\n    }\n  };\n  // Return HTML\n  return (\n    <div>\n      <h3>Congratulations alumi fellows!</h3>\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"postText\"\n                placeholder=\"Here's a new post...\"\n                value={postText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Post\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your posts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default PostForm;\n","/home/jefreycolegrove/project3_alumni/client/src/components/CommentList/index.js",[],"/home/jefreycolegrove/project3_alumni/client/src/components/CommentForm/index.js",["74"],"// Imports\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { ADD_COMMENT } from '../../utils/mutations';\nimport Auth from '../../utils/auth';\n\n// Comment Form Consts & Events\nconst CommentForm = ({ postId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await addComment({\n        variables: {\n          postId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  // handleChange Event\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n  // Return HTML\n  return (\n    <div>\n      <h4>Please post a comment to the class!</h4>\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to post. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;",{"ruleId":"75","severity":1,"message":"76","line":6,"column":23,"nodeType":"77","messageId":"78","endLine":6,"endColumn":31},{"ruleId":"75","severity":1,"message":"79","line":31,"column":15,"nodeType":"77","messageId":"78","endLine":31,"endColumn":19},{"ruleId":"75","severity":1,"message":"79","line":16,"column":15,"nodeType":"77","messageId":"78","endLine":16,"endColumn":19},"no-unused-vars","'QUERY_ME' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used."]