{"version":3,"sources":["utils/mutations.js","utils/queries.js","utils/auth.js","components/MessageForm/index.js","components/MessageList/index.js","pages/Profile.js","pages/Home.js","pages/Signup.js","pages/Login.js","components/CommentList/index.js","components/CommentForm/index.js","pages/UserPost.js","components/Header/index.js","components/Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["LOGIN_USER","gql","ADD_USER","ADD_MESSAGE","ADD_COMMENT","QUERY_USER","QUERY_MESSAGE","QUERY_USERPOST","QUERY_ME","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","MessageForm","useState","messageText","setMessageText","characterCount","setCharacterCount","useMutation","update","cache","addMessage","data","message","readQuery","query","writeQuery","e","console","error","me","handleFormSubmit","event","a","preventDefault","variables","messageAuthor","Auth","getProfile","username","loggedIn","className","onSubmit","name","placeholder","value","style","lineHeight","resize","onChange","target","length","type","to","MessageList","title","showTitle","showUsername","map","fontSize","createdAt","_id","Profile","userParam","useParams","useQuery","loading","user","border","Home","Signup","email","password","formState","setFormState","addUser","handleChange","log","login","cursor","Login","props","CommentList","comments","borderBottom","comment","commentAuthor","commentText","CommentForm","messageId","setCommentText","addComment","UserPost","fontStyle","Header","Footer","useLocation","history","useHistory","pathname","onClick","goBack","role","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","InMemoryCache","App","ApolloProvider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f73988a.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser($username: String!, $email: String!, $password: String!) {\r\n    addUser(username: $username, email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_MESSAGE = gql`\r\n  mutation addmessage($messageText: String!) {\r\n    addMessage(MessageText: $messageText) {\r\n      _id\r\n      messageText\r\n      messageAuthor\r\n      createdAt\r\n      comments {\r\n        _id\r\n        commentText\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_COMMENT = gql`\r\n  mutation addComment($messageId: ID!, $commentText: String!) {\r\n    addComment(messageId: $messageId, commentText: $commentText) {\r\n      _id\r\n      messageText\r\n      messageAuthor\r\n      createdAt\r\n      comments {\r\n        _id\r\n        commentText\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from '@apollo/client';\r\n\r\n\r\nexport const QUERY_USER = gql`\r\n  query user($username: String!) {\r\n    user(username: $username) {\r\n      _id\r\n      username\r\n      email\r\n      message {\r\n        _id\r\n        messageText\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_MESSAGE = gql`\r\n  query getMessage {\r\n    message {\r\n      _id\r\n      messageText\r\n      messageAuthor\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_USERPOST = gql`\r\n  query getUserPost($messageId: ID!) {\r\n    message(messageID: $messageId) {\r\n      _id\r\n      messageText\r\n      messageAuthor\r\n      createdAt\r\n      comments {\r\n        _id\r\n        commentText\r\n        commentAuthor\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_ME = gql`\r\n  query me {\r\n    me {\r\n      _id\r\n      username\r\n      email\r\n      message {\r\n        _id\r\n        messageText\r\n        messageAuthor\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = this.getToken();\r\n    // If there is a token and it's not expired, return `true`\r\n    return token && !this.isTokenExpired(token) ? true : false;\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    // Decode the token to get its expiration time that was set by the server\r\n    const decoded = decode(token);\r\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\r\n    if (decoded.exp < Date.now() / 1000) {\r\n      localStorage.removeItem('id_token');\r\n      return true;\r\n    }\r\n    // If token hasn't passed its expiration time, return `false`\r\n    return false;\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('id_token');\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_MESSAGE } from '../../utils/mutations';\r\nimport { QUERY_MESSAGE, QUERY_ME } from '../../utils/queries';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst MessageForm = () => {\r\n  const [messageText, setMessageText] = useState('');\r\n\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n\r\n  const [addMessage, { error }] = useMutation(ADD_MESSAGE, {\r\n    update(cache, { data: { addMessage } }) {\r\n      try {\r\n        const { message } = cache.readQuery({ query: QUERY_MESSAGE });\r\n\r\n        cache.writeQuery({\r\n          query: QUERY_MESSAGE,\r\n          data: { message: [addMessage, ...message] },\r\n        });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n\r\n      // update me object's cache\r\n      const { me } = cache.readQuery({ query: QUERY_ME });\r\n      cache.writeQuery({\r\n        query: QUERY_ME,\r\n        data: { me: { ...me, message: [...me.message, addMessage] } },\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await addMessage({\r\n        variables: {\r\n          messageText,\r\n          messageAuthor: Auth.getProfile().data.username,\r\n        },\r\n      });\r\n\r\n      setMessageText('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === 'messageText' && value.length <= 280) {\r\n      setMessageText(value);\r\n      setCharacterCount(value.length);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Share a message</h3>\r\n\r\n      {Auth.loggedIn() ? (\r\n        <>\r\n          <p\r\n            className={`m-0 ${\r\n              characterCount === 280 || error ? 'text-danger' : ''\r\n            }`}\r\n          >\r\n            Character Count: {characterCount}/280\r\n          </p>\r\n          <form\r\n            className=\"flex-row justify-center justify-space-between-md align-center\"\r\n            onSubmit={handleFormSubmit}\r\n          >\r\n            <div className=\"col-12 col-lg-9\">\r\n              <textarea\r\n                name=\"messageText\"\r\n                placeholder=\"new message\"\r\n                value={messageText}\r\n                className=\"form-input w-100\"\r\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\r\n                onChange={handleChange}\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-lg-3\">\r\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\r\n                Add Message\r\n              </button>\r\n            </div>\r\n            {error && (\r\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <p>\r\n          You need to be logged in to share your thoughts. Please{' '}\r\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageForm;\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MessageList = ({\r\n  message,\r\n  title,\r\n  showTitle = true,\r\n  showUsername = true,\r\n}) => {\r\n  if (!message.length) {\r\n    return <h3>No messages yet</h3>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {showTitle && <h3>{title}</h3>}\r\n      {message &&\r\n        message.map((message) => (\r\n          <div key={message._id} className=\"card mb-3\">\r\n            <h4 className=\"card-header bg-primary text-light p-2 m-0\">\r\n              {showUsername ? (\r\n                <Link\r\n                  className=\"text-light\"\r\n                  to={`/profiles/${message.messageAuthor}`}\r\n                >\r\n                  {message.messageAuthor} <br />\r\n                  <span style={{ fontSize: '1rem' }}>\r\n                    had replied to this {message.createdAt}\r\n                  </span>\r\n                </Link>\r\n              ) : (\r\n                <>\r\n                  <span style={{ fontSize: '1rem' }}>\r\n                    You replied to this {message.createdAt}\r\n                  </span>\r\n                </>\r\n              )}\r\n            </h4>\r\n            <div className=\"card-body bg-light p-2\">\r\n              <p>{message.messageText}</p>\r\n            </div>\r\n            <Link\r\n              className=\"btn btn-primary btn-block btn-squared\"\r\n              to={`/message/${message._id}`}\r\n            >\r\n              Reply to this.\r\n            </Link>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageList;\r\n\r\n","import React from 'react';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport MessageForm from '../components/MessageForm';\r\nimport MessageList from '../components/MessageList';\r\n\r\nimport { QUERY_USER, QUERY_ME } from '../utils/queries';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Profile = () => {\r\n  const { username: userParam } = useParams();\r\n\r\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\r\n    variables: { username: userParam },\r\n  });\r\n\r\n  const user = data?.me || data?.user || {};\r\n  // redirect to personal profile page if username is yours\r\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\r\n    return <Redirect to=\"/me\" />;\r\n  }\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!user?.username) {\r\n    return (\r\n      <h4>\r\n        You need to be logged in to see this. Use the navigation links above to\r\n        sign up or log in!\r\n      </h4>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex-row justify-center mb-3\">\r\n        <h2 className=\"col-12 col-md-10 bg-dark text-light p-3 mb-5\">\r\n          Viewing {userParam ? `${user.username}'s` : 'your'} profile.\r\n        </h2>\r\n\r\n        <div className=\"col-12 col-md-10 mb-5\">\r\n          <MessageList\r\n            message={user.message}\r\n            title={`${user.username}'s message...`}\r\n            showTitle={false}\r\n            showUsername={false}\r\n          />\r\n        </div>\r\n        {!userParam && (\r\n          <div\r\n            className=\"col-12 col-md-10 mb-3 p-3\"\r\n            style={{ border: '1px dotted #1a1a1a' }}\r\n          >\r\n            <MessageForm />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport MessageList from '../components/MessageList';\r\nimport MessageForm from '../components/MessageForm';\r\n\r\n\r\nimport { QUERY_MESSAGE } from '../utils/queries';\r\n\r\nconst Home = () => {\r\n  const { loading, data } = useQuery(QUERY_MESSAGE);\r\n  const message = data?.message || [];\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"\">\r\n        <div\r\n          className=\"\\\"\r\n          style={{ border: '' }}\r\n        >\r\n          <MessageForm />\r\n        </div>\r\n        <div className=\"\">\r\n          {loading ? (\r\n            <div>Loading...</div>\r\n          ) : (\r\n            <MessageList\r\n              message={message}\r\n              title=\"UW post a message\"\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Signup = () => {\r\n  const [formState, setFormState] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [addUser, { error, data }] = useMutation(ADD_USER);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState);\r\n\r\n    try {\r\n      const { data } = await addUser({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      Auth.login(data.addUser.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=\"flex-row justify-center mb-4\">\r\n      <div className=\"col-12 col-lg-10\">\r\n        <div className=\"card\">\r\n          <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\r\n          <div className=\"card-body\">\r\n            {data ? (\r\n              <p>\r\n                Success! You may now head{' '}\r\n                <Link to=\"/\">back to the homepage.</Link>\r\n              </p>\r\n            ) : (\r\n              <form onSubmit={handleFormSubmit}>\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"Your username\"\r\n                  name=\"username\"\r\n                  type=\"text\"\r\n                  value={formState.name}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"Your email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={formState.email}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"******\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={formState.password}\r\n                  onChange={handleChange}\r\n                />\r\n                <button\r\n                  className=\"btn btn-block btn-primary\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            )}\r\n\r\n            {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Signup;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Login = (props) => {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [login, { error, data }] = useMutation(LOGIN_USER);\r\n\r\n  // update state based on form input changes\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // submit form\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState);\r\n    try {\r\n      const { data } = await login({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      Auth.login(data.login.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n\r\n    // clear form values\r\n    setFormState({\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <main className=\"flex-row justify-center mb-4\">\r\n      <div className=\"col-12 col-lg-10\">\r\n        <div className=\"card\">\r\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\r\n          <div className=\"card-body\">\r\n            {data ? (\r\n              <p>\r\n                Success! You may now head{' '}\r\n                <Link to=\"/\">back to the homepage.</Link>\r\n              </p>\r\n            ) : (\r\n              <form onSubmit={handleFormSubmit}>\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"Your email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={formState.email}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"******\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={formState.password}\r\n                  onChange={handleChange}\r\n                />\r\n                <button\r\n                  className=\"btn btn-block btn-primary\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            )}\r\n\r\n            {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nconst CommentList = ({ comments = [] }) => {\r\n  if (!comments.length) {\r\n    return <h3>No Comments Yet</h3>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3\r\n        className=\"p-5 display-inline-block\"\r\n        style={{ borderBottom: '1px dotted #1a1a1a' }}\r\n      >\r\n        Comments\r\n      </h3>\r\n      <div className=\"flex-row my-4\">\r\n        {comments &&\r\n          comments.map((comment) => (\r\n            <div key={comment._id} className=\"col-12 mb-3 pb-3\">\r\n              <div className=\"p-3 bg-dark text-light\">\r\n                <h5 className=\"card-header\">\r\n                  {comment.commentAuthor} commented{' '}\r\n                  <span style={{ fontSize: '0.825rem' }}>\r\n                    on {comment.createdAt}\r\n                  </span>\r\n                </h5>\r\n                <p className=\"card-body\">{comment.commentText}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_COMMENT } from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst CommentForm = ({ messageId }) => {\r\n  const [commentText, setCommentText] = useState('');\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n\r\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await addComment({\r\n        variables: {\r\n          messageId,\r\n          commentText,\r\n          commentAuthor: Auth.getProfile().data.username,\r\n        },\r\n      });\r\n\r\n      setCommentText('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === 'commentText' && value.length <= 280) {\r\n      setCommentText(value);\r\n      setCharacterCount(value.length);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4>Reply to this</h4>\r\n\r\n      {Auth.loggedIn() ? (\r\n        <>\r\n          <p\r\n            className={`m-0 ${\r\n              characterCount === 280 || error ? 'text-danger' : ''\r\n            }`}\r\n          >\r\n            Character Count: {characterCount}/280\r\n            {error && <span className=\"ml-2\">{error.message}</span>}\r\n          </p>\r\n          <form\r\n            className=\"flex-row justify-center justify-space-between-md align-center\"\r\n            onSubmit={handleFormSubmit}\r\n          >\r\n            <div className=\"col-12 col-lg-9\">\r\n              <textarea\r\n                name=\"commentText\"\r\n                placeholder=\"Add your comment...\"\r\n                value={commentText}\r\n                className=\"form-input w-100\"\r\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\r\n                onChange={handleChange}\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-lg-3\">\r\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\r\n                Add Comment\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <p>\r\n          You need to be logged in to share your thoughts. Please{' '}\r\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n","import React from 'react';\r\n\r\n// Import the `useParams()` hook\r\nimport { useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport CommentList from '../components/CommentList';\r\nimport CommentForm from '../components/CommentForm';\r\n\r\nimport { QUERY_USERPOST } from '../utils/queries';\r\n\r\nconst UserPost = () => {\r\n  // Use `useParams()` to retrieve value of the route parameter `:profileId`\r\n  const { messageId } = useParams();\r\n\r\n  const { loading, data } = useQuery(QUERY_USERPOST, {\r\n    // pass URL parameter\r\n    variables: { messageId: messageId },\r\n  });\r\n\r\n  const message = data?.message || {};\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div className=\"my-3\">\r\n      <h3 className=\"card-header bg-dark text-light p-2 m-0\">\r\n        {message.messageAuthor} <br />\r\n        <span style={{ fontSize: '1rem' }}>\r\n          your post {message.createdAt}\r\n        </span>\r\n      </h3>\r\n      <div className=\"bg-light py-4\">\r\n        <blockquote\r\n          className=\"p-4\"\r\n          style={{\r\n            fontSize: '1.5rem',\r\n            fontStyle: 'italic',\r\n            border: '2px dotted #1a1a1a',\r\n            lineHeight: '1.5',\r\n          }}\r\n        >\r\n          {message.messageText}\r\n        </blockquote>\r\n      </div>\r\n\r\n      <div className=\"my-5\">\r\n        <CommentList comments={message.comments} />\r\n      </div>\r\n      <div className=\"m-3 p-4\" style={{ border: '1px dotted #1a1a1a' }}>\r\n        <CommentForm messageId={message._id} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPost;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"bg-primary text-light mb-4 py-3 flex-row align-center\">\r\n      <div className=\"container flex-row justify-space-between-lg justify-center align-center\">\r\n        <Link className=\"text-light\" to=\"/\">\r\n          <h1 className=\"m-0\">Alumni Message Board </h1>\r\n        </Link>\r\n        <p className=\"m-0\">Stay In Touch with all your Awesome Classmates</p>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  return (\r\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\r\n      <div className=\"container text-center mb-5\">\r\n        {location.pathname !== '/' && (\r\n          <button\r\n            className=\"btn btn-dark mb-3\"\r\n            onClick={() => history.goBack()}\r\n          >\r\n            &larr; Go Back\r\n          </button>\r\n        )}\r\n        <h4>\r\n          Made with{' '}\r\n          <span\r\n            className=\"emoji\"\r\n            role=\"img\"\r\n            aria-label=\"heart\"\r\n            aria-hidden=\"false\"\r\n          >\r\n            ❤️\r\n          </span>{' '}\r\n          by UW Bootcamp Students.\r\n        </h4>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport {\r\n    ApolloClient,\r\n    InMemoryCache,\r\n    ApolloProvider,\r\n    createHttpLink,\r\n} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport Profile from './pages/Profile'\r\nimport Home from './pages/Home';\r\nimport Signup from './pages/Signup';\r\nimport Login from './pages/Login';\r\nimport UserPost from './pages/UserPost';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\n\r\nconst httpLink = createHttpLink({\r\n    uri: '/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n    // get the authentication token from local storage if it exists\r\n    const token = localStorage.getItem('id_token');\r\n    // return the headers to the context so httpLink can read them\r\n    return {\r\n        headers: {\r\n            ...headers,\r\n            authorization: token ? `Bearer ${token}` : '',\r\n        },\r\n    };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n    // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\r\n    link: authLink.concat(httpLink),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n    return (\r\n        <ApolloProvider client={client}>\r\n            <Router>\r\n                <div className=\"\" >\r\n                    <Header />\r\n                    <div className=\"container\">\r\n                        <Route exact path=\"/\">\r\n                            <Home />\r\n                        </Route>\r\n                        <Route exact path=\"/login\">\r\n                            <Login />\r\n                        </Route>\r\n                        <Route exact path=\"/signup\">\r\n                            <Signup />\r\n                        </Route>\r\n                        <Route exact path=\"/me\">\r\n                            <Profile />\r\n                        </Route>\r\n                        <Route exact path=\"/profiles/:username\">\r\n                            <Profile />\r\n                        </Route>\r\n                        <Route exact path=\"message/:messageID\">\r\n                            <UserPost />\r\n                        </Route>\r\n                    </div>\r\n                    <Footer />\r\n                </div>\r\n            </Router>\r\n        </ApolloProvider>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}