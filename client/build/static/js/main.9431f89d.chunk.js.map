{"version":3,"sources":["components/PostList/index.js","utils/mutations.js","utils/queries.js","utils/auth.js","components/PostForm/index.js","pages/Home.js","pages/Signup.js","pages/Login.js","components/CommentList/index.js","components/CommentForm/index.js","pages/SinglePost.js","pages/Profile.js","components/Header/index.js","components/Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["PostList","posts","title","showTitle","showUsername","length","map","post","className","to","postAuthor","style","fontSize","createdAt","postText","_id","LOGIN_USER","gql","ADD_USER","ADD_POST","ADD_COMMENT","QUERY_USER","QUERY_POSTS","QUERY_SINGLE_POST","QUERY_ME","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","PostForm","useState","setPostText","characterCount","setCharacterCount","useMutation","update","cache","addPost","data","readQuery","query","writeQuery","e","console","error","handleFormSubmit","event","a","preventDefault","variables","Auth","getProfile","username","loggedIn","onSubmit","name","placeholder","value","lineHeight","resize","onChange","target","type","message","Home","useQuery","loading","border","Signup","email","password","formState","setFormState","addUser","handleChange","log","login","cursor","Login","props","CommentList","comments","borderBottom","comment","commentAuthor","commentText","CommentForm","postId","setCommentText","addComment","SinglePost","useParams","fontStyle","Profile","userParam","user","me","Header","onClick","logout","Footer","useLocation","history","useHistory","pathname","goBack","role","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","InMemoryCache","App","ApolloProvider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9431f89d.chunk.js","sourcesContent":["// Imports\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Consts & Events\r\nconst PostList = ({\r\n  posts,\r\n  title,\r\n  showTitle = true,\r\n  showUsername = true,\r\n}) => {\r\n  if (!posts.length) {\r\n    return <h3>No Posts Yet</h3>;\r\n  }\r\n  // Return HTML\r\n  return (\r\n    <div>\r\n      {showTitle && <h3>{title}</h3>}\r\n      {posts &&\r\n        posts.map((post) => (\r\n          <div key={post._id} className=\"card mb-3\">\r\n            <h4 className=\"card-header bg-primary text-light p-2 m-0\">\r\n              {showUsername ? (\r\n                <Link\r\n                  className=\"text-light\"\r\n                  to={`/profiles/${post.postAuthor}`}\r\n                >\r\n                  {post.postAuthor} <br />\r\n                  <span style={{ fontSize: '1rem' }}>\r\n                    had this post on {post.createdAt}\r\n                  </span>\r\n                </Link>\r\n              ) : (\r\n                <>\r\n                  <span style={{ fontSize: '1rem' }}>\r\n                    You had this post on {post.createdAt}\r\n                  </span>\r\n                </>\r\n              )}\r\n            </h4>\r\n            <div className=\"card-body bg-light p-2\">\r\n              <p>{post.postText}</p>\r\n            </div>\r\n            <Link\r\n              className=\"btn btn-primary btn-block btn-squared\"\r\n              to={`/posts/${post._id}`}\r\n            >\r\n              Join the discussion on this post.\r\n            </Link>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n","// Imports\r\nimport { gql } from '@apollo/client';\r\n\r\n// Exports\r\nexport const LOGIN_USER = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser($username: String!, $email: String!, $password: String!) {\r\n    addUser(username: $username, email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_POST = gql`\r\n  mutation addPost($postText: String!) {\r\n    addPost(postText: $postText) {\r\n      _id\r\n      postText\r\n      postAuthor\r\n      createdAt\r\n      comments {\r\n        _id\r\n        commentText\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_COMMENT = gql`\r\n  mutation addComment($postId: ID!, $commentText: String!) {\r\n    addComment(postId: $postId, commentText: $commentText) {\r\n      _id\r\n      postText\r\n      postAuthor\r\n      createdAt\r\n      comments {\r\n        _id\r\n        commentText\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","// Imports\r\nimport { gql } from '@apollo/client';\r\n\r\n// Exports\r\nexport const QUERY_USER = gql`\r\n  query user($username: String!) {\r\n    user(username: $username) {\r\n      _id\r\n      username\r\n      email\r\n      posts {\r\n        _id\r\n        postText\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_POSTS = gql`\r\n  query getPosts {\r\n    posts {\r\n      _id\r\n      postText\r\n      postAuthor\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_SINGLE_POST = gql`\r\n  query getSinglePost($postId: ID!) {\r\n    post(postId: $postId) {\r\n      _id\r\n      postText\r\n      postAuthor\r\n      createdAt\r\n      comments {\r\n        _id\r\n        commentText\r\n        commentAuthor\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_ME = gql`\r\n  query me {\r\n    me {\r\n      _id\r\n      username\r\n      email\r\n      posts {\r\n        _id\r\n        postText\r\n        postAuthor\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","// Imports\r\nimport decode from 'jwt-decode';\r\n\r\n// Class\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n  // Status logged in\r\n  loggedIn() {\r\n    const token = this.getToken();\r\n    // If token hasn't expired, return `true`\r\n    return token && !this.isTokenExpired(token) ? true : false;\r\n  }\r\n  // Expired token \r\n  isTokenExpired(token) {\r\n    // Token Expiration Check\r\n    const decoded = decode(token);\r\n    // If token is expired return true\r\n    if (decoded.exp < Date.now() / 1000) {\r\n      localStorage.removeItem('id_token');\r\n      return true;\r\n    }\r\n    // If token has not expired,  return `false`\r\n    return false;\r\n  }\r\n  // Get Token\r\n  getToken() {\r\n    return localStorage.getItem('id_token');\r\n  }\r\n  // Login\r\n  login(idToken) {\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/');\r\n  }\r\n  // Logout\r\n  logout() {\r\n    localStorage.removeItem('id_token');\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","// Imports\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_POST } from '../../utils/mutations';\r\nimport { QUERY_POSTS, QUERY_ME } from '../../utils/queries';\r\nimport Auth from '../../utils/auth';\r\n\r\n// Post form const & events\r\nconst PostForm = () => {\r\n  const [postText, setPostText] = useState('');\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n  const [addPost, { error }] = useMutation(ADD_POST, {\r\n    update(cache, { data: { addPost } }) {\r\n      try {\r\n        const { posts } = cache.readQuery({ query: QUERY_POSTS });\r\n\r\n        cache.writeQuery({\r\n          query: QUERY_POSTS,\r\n          data: { posts: [addPost, ...posts] },\r\n        });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    },\r\n  });\r\n  // Subit form handler\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const { data } = await addPost({\r\n        variables: {\r\n          postText,\r\n          postAuthor: Auth.getProfile().data.username,\r\n        },\r\n      });\r\n\r\n      setPostText('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n  // Change Handler\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    if (name === 'postText' && value.length <= 280) {\r\n      setPostText(value);\r\n      setCharacterCount(value.length);\r\n    }\r\n  };\r\n  // Return HTML\r\n  return (\r\n    <div>\r\n      <h3>Congratulations alumi fellows!</h3>\r\n      {Auth.loggedIn() ? (\r\n        <>\r\n          <p\r\n            className={`m-0 ${\r\n              characterCount === 280 || error ? 'text-danger' : ''\r\n            }`}\r\n          >\r\n            Character Count: {characterCount}/280\r\n          </p>\r\n          <form\r\n            className=\"flex-row justify-center justify-space-between-md align-center\"\r\n            onSubmit={handleFormSubmit}\r\n          >\r\n            <div className=\"col-12 col-lg-9\">\r\n              <textarea\r\n                name=\"postText\"\r\n                placeholder=\"Here's a new post...\"\r\n                value={postText}\r\n                className=\"form-input w-100\"\r\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\r\n                onChange={handleChange}\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"col-12 col-lg-3\">\r\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\r\n                Add Post\r\n              </button>\r\n            </div>\r\n            {error && (\r\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <p>\r\n          You need to be logged in to share your posts. Please{' '}\r\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","// Imports\r\nimport React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport PostList from '../components/PostList';\r\nimport PostForm from '../components/PostForm';\r\nimport { QUERY_POSTS } from '../utils/queries';\r\n\r\n// Consts & queries\r\nconst Home = () => {\r\n  const { loading, data } = useQuery(QUERY_POSTS);\r\n  const posts = data?.posts || [];\r\n  // Return HTML\r\n  return (\r\n    <main>\r\n      <div className=\"flex-row justify-center\">\r\n        <div\r\n          className=\"col-12 col-md-10 mb-3 p-3\"\r\n          style={{ border: '1px dotted #1a1a1a' }}\r\n        >\r\n          <PostForm />\r\n        </div>\r\n        <div className=\"col-12 col-md-8 mb-3\">\r\n          {loading ? (\r\n            <div>Loading...</div>\r\n          ) : (\r\n            <PostList\r\n              posts={posts}\r\n              title=\"Some Feed for Post(s)...\"\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","// Imports \r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\n// Signup form consts and events\r\nconst Signup = () => {\r\n  const [formState, setFormState] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [addUser, { error, data }] = useMutation(ADD_USER);\r\n  //  Change Handler\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    // State Set\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n  // Submit form handler\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState);\r\n    try {\r\n      const { data } = await addUser({\r\n        variables: { ...formState },\r\n      });\r\n      // Auth Token\r\n      Auth.login(data.addUser.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n  // Return HTML\r\n  return (\r\n    <main className=\"flex-row justify-center mb-4\">\r\n      <div className=\"col-12 col-lg-10\">\r\n        <div className=\"card\">\r\n          <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\r\n          <div className=\"card-body\">\r\n            {data ? (\r\n              <p>\r\n                Success! You may now head{' '}\r\n                <Link to=\"/\">back to the homepage.</Link>\r\n              </p>\r\n            ) : (\r\n              <form onSubmit={handleFormSubmit}>\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"Your username\"\r\n                  name=\"username\"\r\n                  type=\"text\"\r\n                  value={formState.name}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"Your email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={formState.email}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"******\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={formState.password}\r\n                  onChange={handleChange}\r\n                />\r\n                <button\r\n                  className=\"btn btn-block btn-primary\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            )}\r\n            {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","// Imports \r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\n// Consts, events & queries\r\nconst Login = (props) => {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [login, { error, data }] = useMutation(LOGIN_USER);\r\n  // State update based on user input\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n  // Submit form handler\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState);\r\n    try {\r\n      const { data } = await login({\r\n        variables: { ...formState },\r\n      });\r\n      // Auth Token\r\n      Auth.login(data.login.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    // Clear form values\r\n    setFormState({\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n  // Return HTML\r\n  return (\r\n    <main className=\"flex-row justify-center mb-4\">\r\n      <div className=\"col-12 col-lg-10\">\r\n        <div className=\"card\">\r\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\r\n          <div className=\"card-body\">\r\n            {data ? (\r\n              <p>\r\n                Success! You may now return{' '}\r\n                <Link to=\"/\">to the homepage.</Link>\r\n              </p>\r\n            ) : (\r\n              <form onSubmit={handleFormSubmit}>\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"Your email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={formState.email}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"******\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={formState.password}\r\n                  onChange={handleChange}\r\n                />\r\n                <button\r\n                  className=\"btn btn-block btn-primary\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            )}\r\n\r\n            {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","// Imports\r\nimport React from 'react';\r\n\r\n// Comment List consts\r\nconst CommentList = ({ comments = [] }) => {\r\n  if (!comments.length) {\r\n    return <h3>No Comments Yet</h3>;\r\n  }\r\n  // Retrun HTML\r\n  return (\r\n    <>\r\n      <h3\r\n        className=\"p-5 display-inline-block\"\r\n        style={{ borderBottom: '1px dotted #1a1a1a' }}\r\n      >\r\n        Comments\r\n      </h3>\r\n      <div className=\"flex-row my-4\">\r\n        {comments &&\r\n          comments.map((comment) => (\r\n            <div key={comment._id} className=\"col-12 mb-3 pb-3\">\r\n              <div className=\"p-3 bg-dark text-light\">\r\n                <h5 className=\"card-header\">\r\n                  {comment.commentAuthor} commented{' '}\r\n                  <span style={{ fontSize: '0.825rem' }}>\r\n                    on {comment.createdAt}\r\n                  </span>\r\n                </h5>\r\n                <p className=\"card-body\">{comment.commentText}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n","// Imports\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_COMMENT } from '../../utils/mutations';\r\nimport Auth from '../../utils/auth';\r\n\r\n// Comment Form Consts & Events\r\nconst CommentForm = ({ postId }) => {\r\n  const [commentText, setCommentText] = useState('');\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const { data } = await addComment({\r\n        variables: {\r\n          postId,\r\n          commentText,\r\n          commentAuthor: Auth.getProfile().data.username,\r\n        },\r\n      });\r\n      setCommentText('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n  // handleChange Event\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    if (name === 'commentText' && value.length <= 280) {\r\n      setCommentText(value);\r\n      setCharacterCount(value.length);\r\n    }\r\n  };\r\n  // Return HTML\r\n  return (\r\n    <div>\r\n      <h4>Please post a comment to the class!</h4>\r\n      {Auth.loggedIn() ? (\r\n        <>\r\n          <p\r\n            className={`m-0 ${\r\n              characterCount === 280 || error ? 'text-danger' : ''\r\n            }`}\r\n          >\r\n            Character Count: {characterCount}/280\r\n            {error && <span className=\"ml-2\">{error.message}</span>}\r\n          </p>\r\n          <form\r\n            className=\"flex-row justify-center justify-space-between-md align-center\"\r\n            onSubmit={handleFormSubmit}\r\n          >\r\n            <div className=\"col-12 col-lg-9\">\r\n              <textarea\r\n                name=\"commentText\"\r\n                placeholder=\"Add your comment...\"\r\n                value={commentText}\r\n                className=\"form-input w-100\"\r\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\r\n                onChange={handleChange}\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"col-12 col-lg-3\">\r\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\r\n                Add Comment\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <p>\r\n          You need to be logged in to post. Please{' '}\r\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentForm;","// Imports \r\nimport React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport CommentList from '../components/CommentList';\r\nimport CommentForm from '../components/CommentForm';\r\nimport { QUERY_SINGLE_POST } from '../utils/queries';\r\n\r\n// Post consts, queries and events/handlers\r\nconst SinglePost = () => {\r\n  const { postId } = useParams();\r\n  const { loading, data } = useQuery(QUERY_SINGLE_POST, {\r\n    variables: { postId: postId },\r\n  });\r\n  const post = data?.post || {};\r\n  // Conditional\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div className=\"my-3\">\r\n      <h3 className=\"card-header bg-dark text-light p-2 m-0\">\r\n        {post.postAuthor} <br />\r\n        <span style={{ fontSize: '1rem' }}>\r\n          had this post on {post.createdAt}\r\n        </span>\r\n      </h3>\r\n      <div className=\"bg-light py-4\">\r\n        <blockquote\r\n          className=\"p-4\"\r\n          style={{\r\n            fontSize: '1.5rem',\r\n            fontStyle: 'italic',\r\n            border: '2px dotted #1a1a1a',\r\n            lineHeight: '1.5',\r\n          }}\r\n        >\r\n          {post.postText}\r\n        </blockquote>\r\n      </div>\r\n      <div className=\"my-5\">\r\n        <CommentList comments={post.comments} />\r\n      </div>\r\n      <div className=\"m-3 p-4\" style={{ border: '1px dotted #1a1a1a' }}>\r\n        <CommentForm postId={post._id} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SinglePost;\r\n","// Imports\r\nimport React from 'react';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport PostForm from '../components/PostForm';\r\nimport PostList from '../components/PostList';\r\nimport { QUERY_USER, QUERY_ME } from '../utils/queries';\r\nimport Auth from '../utils/auth';\r\n\r\n// Profile consts\r\nconst Profile = () => {\r\n  const { username: userParam } = useParams();\r\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\r\n    variables: { username: userParam },\r\n  });\r\n  const user = data?.me || data?.user || {};\r\n  // Redirect to your profile page if user names matches yours.\r\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\r\n    return <Redirect to=\"/me\" />;\r\n  }\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  if (!user?.username) {\r\n    return (\r\n      <h4>\r\n        You need to log in to see this page. Use the links above to\r\n        sign up or log in.\r\n      </h4>\r\n    );\r\n  }\r\n  // Return HTML\r\n  return (\r\n    <div>\r\n      <div className=\"flex-row justify-center mb-3\">\r\n        <h2 className=\"col-12 col-md-10 bg-dark text-light p-3 mb-5\">\r\n          Viewing {userParam ? `${user.username}'s` : 'your'} profile.\r\n        </h2>\r\n        <div className=\"col-12 col-md-10 mb-5\">\r\n          <PostList\r\n            posts={user.posts}\r\n            title={`${user.username}'s posts...`}\r\n            showTitle={false}\r\n            showUsername={false}\r\n          />\r\n        </div>\r\n        {!userParam && (\r\n          <div\r\n            className=\"col-12 col-md-10 mb-3 p-3\"\r\n            style={{ border: '1px dotted #1a1a1a' }}\r\n          >\r\n            <PostForm />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","// Imports\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Auth from '../../utils/auth';\r\n\r\n// Header Consts & Events\r\nconst Header = () => {\r\n  const logout = (event) => {\r\n    event.preventDefault();\r\n    Auth.logout();\r\n  };\r\n  return (\r\n    <header className=\"bg-primary text-light mb-4 py-3 flex-row align-center\">\r\n      <div className=\"container flex-row justify-space-between-lg justify-center align-center\">\r\n        <div>\r\n          <Link className=\"text-light\" to=\"/\">\r\n            <h1 className=\"m-0\">Alumni Messageboard</h1>\r\n          </Link>\r\n          <p className=\"m-0\">Post a message to your classmates!</p>\r\n        </div>\r\n        <div>\r\n          {Auth.loggedIn() ? (\r\n            <>\r\n              <Link className=\"btn btn-lg btn-info m-2\" to=\"/me\">\r\n                {Auth.getProfile().data.username}'s profile\r\n              </Link>\r\n              <button className=\"btn btn-lg btn-light m-2\" onClick={logout}>\r\n                Logout\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Link className=\"btn btn-lg btn-info m-2\" to=\"/login\">\r\n                Login\r\n              </Link>\r\n              <Link className=\"btn btn-lg btn-light m-2\" to=\"/signup\">\r\n                Signup\r\n              </Link>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// Imports\r\nimport React from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\n// Footer Consts\r\nconst Footer = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  return (\r\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\r\n      <div className=\"container text-center mb-5\">\r\n        {location.pathname !== '/' && (\r\n          <button\r\n            className=\"btn btn-dark mb-3\"\r\n            onClick={() => history.goBack()}\r\n          >\r\n            &larr; Go Back\r\n          </button>\r\n        )}\r\n        <h4>\r\n          Made with{' '}\r\n          <span\r\n            className=\"emoji\"\r\n            role=\"img\"\r\n            aria-label=\"heart\"\r\n            aria-hidden=\"false\"\r\n          >\r\n            ❤️\r\n          </span>{' '}\r\n          by Group 5.\r\n        </h4>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","// Imports\r\nimport React from 'react';\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport Signup from './pages/Signup';\r\nimport Login from './pages/Login';\r\nimport SinglePost from './pages/SinglePost';\r\nimport Profile from './pages/Profile';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\n\r\n// GraphQL API \r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n});\r\n\r\n//  Attach the JWT token to every request as an `authorization` header\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem('id_token');\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n// Return Data\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div className=\"flex-column justify-flex-start min-100-vh\">\r\n          <Header />\r\n          <div className=\"container\">\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route exact path=\"/login\">\r\n              <Login />\r\n            </Route>\r\n            <Route exact path=\"/signup\">\r\n              <Signup />\r\n            </Route>\r\n            <Route exact path=\"/me\">\r\n              <Profile />\r\n            </Route>\r\n            <Route exact path=\"/profiles/:username\">\r\n              <Profile />\r\n            </Route>\r\n            <Route exact path=\"/posts/:postId\">\r\n              <SinglePost />\r\n            </Route>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}